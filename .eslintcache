[{"D:\\react\\whatsapp-clone\\src\\index.js":"1","D:\\react\\whatsapp-clone\\src\\App.js":"2","D:\\react\\whatsapp-clone\\src\\reportWebVitals.js":"3","D:\\react\\whatsapp-clone\\src\\Sidebar.js":"4","D:\\react\\whatsapp-clone\\src\\SidebarChat.js":"5","D:\\react\\whatsapp-clone\\src\\Chat.js":"6","D:\\react\\whatsapp-clone\\src\\firebase.js":"7","D:\\react\\whatsapp-clone\\src\\Login.js":"8","D:\\react\\whatsapp-clone\\src\\StateProvider.js":"9","D:\\react\\whatsapp-clone\\src\\Reducer.js":"10"},{"size":839,"mtime":1611379229817,"results":"11","hashOfConfig":"12"},{"size":1020,"mtime":1611377138856,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":2488,"mtime":1611370693355,"results":"15","hashOfConfig":"12"},{"size":1785,"mtime":1611375209876,"results":"16","hashOfConfig":"12"},{"size":3990,"mtime":1611380357353,"results":"17","hashOfConfig":"12"},{"size":715,"mtime":1611378734471,"results":"18","hashOfConfig":"12"},{"size":1076,"mtime":1611379524372,"results":"19","hashOfConfig":"12"},{"size":533,"mtime":1611377505961,"results":"20","hashOfConfig":"12"},{"size":662,"mtime":1611379226548,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ri8z7r",{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\react\\whatsapp-clone\\src\\index.js",[],"D:\\react\\whatsapp-clone\\src\\App.js",["45","46","47"],"D:\\react\\whatsapp-clone\\src\\reportWebVitals.js",[],["48","49"],"D:\\react\\whatsapp-clone\\src\\Sidebar.js",["50"],"D:\\react\\whatsapp-clone\\src\\SidebarChat.js",[],"D:\\react\\whatsapp-clone\\src\\Chat.js",["51","52"],"import React,  { useEffect,useState } from 'react';\r\nimport './Chat.css';\r\nimport {Avatar, IconButton} from \"@material-ui/core\";\r\nimport {AttachFile, MoreVert, SearchOutlined} from \"@material-ui/icons\";\r\nimport InsertEmoticon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from \"./firebase\";\r\n\r\n\r\n\r\nfunction Chat() {\r\n    const [input, setInput]=useState(\"\");\r\n    const[seed, setSeed] = useState('');\r\n    const {roomId}=useParams();\r\n    const[roomName, setRoomName] = useState(\"\");\r\n    const[messages, setMessages] = useState([]);\r\n    const[{user}, dispatch] = useStateValue();\r\n    \r\n\r\n    useEffect(() =>{\r\n        if (roomId){\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot=>{\r\n                setRoomName(snapshot.data().name)     // Pull the data and get the room name\r\n            })\r\n\r\n            db.collection('rooms').doc(roomId).collection(\"messages\").orderBy('timestamp','asc').onSnapshot(snapshot =>{\r\n                setMessages(snapshot.docs.map((doc)=> doc.data()))\r\n                \r\n            });\r\n        }\r\n    }, [roomId]) //every time room id changes we will get new messages\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));  //when sidebarchat load it will gen random avatar\r\n    },[roomId])   //roomId will also chnage the avatars when you click it\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        console.log('You typed >>>',input)\r\n\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message:input,\r\n            name: user.displayName,   //comes from google authentication\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),   //if anyone messages from other country we wont incur problems\r\n        });\r\n        setInput(\"\"); // when hit enter it will clear the message\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className='chat__header'>\r\n                <Avatar src={`https://avatars.dicebear.com/api/male/${seed}.svg?background=%230000ff`}/>\r\n                \r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>last seen{\"\"} {new Date(\r\n                        messages[messages.length-1]?.timestamp?.toDate()).toUTCString()}</p>\r\n                </div>\r\n\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined/> \r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton> \r\n                </div>\r\n            </div>\r\n\r\n            <div className='chat__body'>\r\n                {messages.map((message) =>(\r\n                    <p className={`chat__message  ${\r\n                        message.name == user.displayName && 'chat__rec'   //if msg name= users display name then its classify as you \r\n                       }`}\r\n                    >\r\n                       <span className=\"chat__name\">{message.name}</span> \r\n                       {message.message}\r\n                       <span className=\"chat__timestamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\r\n                    </p>\r\n                ))}    \r\n            </div>\r\n\r\n            <div className='chat__footer'>\r\n                <InsertEmoticon/>\r\n                <form>\r\n                    <input value={input} onChange={e=>setInput(e.target.value)} placeholder=\"Type a message\" type=\"text\"/> <button onClick={sendMessage} type=\"submit\">Send a message</button>\r\n                </form>\r\n\r\n                <MicIcon/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","D:\\react\\whatsapp-clone\\src\\firebase.js",[],"D:\\react\\whatsapp-clone\\src\\Login.js",["53"],"import React from 'react'\r\nimport {Button} from \"@material-ui/core\";\r\nimport \"./Login.css\";\r\nimport {auth, provider} from \"./firebase\";\r\nimport { actionTypes } from './Reducer';\r\nimport {useStateValue} from './StateProvider';\r\n\r\nfunction Login() {\r\n    const[{user}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider).then((result)=>{\r\n            dispatch({\r\n                type:actionTypes.SET_USER, user: result.user,\r\n            })\r\n        }).catch((error)=>alert(error.message));\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__c\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/150px-WhatsApp.svg.png\" alt=\"\"/>\r\n            \r\n\r\n                <div className=\"login__text\">\r\n                    <h1>Sign in to Whatsapp</h1>\r\n                </div>\r\n\r\n                <Button type=\"submit\" onClick={signIn}> Sign in with Google</Button>\r\n            \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","D:\\react\\whatsapp-clone\\src\\StateProvider.js",[],"D:\\react\\whatsapp-clone\\src\\Reducer.js",[],{"ruleId":"54","severity":1,"message":"55","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":26},{"ruleId":"54","severity":1,"message":"58","line":1,"column":28,"nodeType":"56","messageId":"57","endLine":1,"endColumn":36},{"ruleId":"54","severity":1,"message":"59","line":10,"column":18,"nodeType":"56","messageId":"57","endLine":10,"endColumn":26},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"54","severity":1,"message":"59","line":14,"column":19,"nodeType":"56","messageId":"57","endLine":14,"endColumn":27},{"ruleId":"54","severity":1,"message":"59","line":20,"column":19,"nodeType":"56","messageId":"57","endLine":20,"endColumn":27},{"ruleId":"64","severity":1,"message":"65","line":81,"column":38,"nodeType":"66","messageId":"67","endLine":81,"endColumn":40},{"ruleId":"54","severity":1,"message":"68","line":9,"column":12,"nodeType":"56","messageId":"57","endLine":9,"endColumn":16},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'dispatch' is assigned a value but never used.","no-native-reassign",["69"],"no-negated-in-lhs",["70"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]